{"ast":null,"code":"import { actionTypes } from './index';\nimport { fromJS } from 'immutable'; //fromJS 也会把list数组编程immutable对象，所以传进来的action里的数据也需要预先转换为immutable对象\n\nconst defaultState = fromJS({\n  focused: false,\n  list: []\n}); //导出一个纯函数,运用了immutable之后，返回的就为一个immutable对象，\n//也就是在别的文件里面引用state.header就为一个immutable对象\n\nexport default ((state = defaultState, action) => {\n  if (action.type === actionTypes.BOX_FOCUS) {\n    //返回的为一个依据之前state以及set的数据新生成的一个immutable对象\n    return state.set('focused', true);\n  } else if (action.type === actionTypes.BOX_BLUR) {\n    return state.set('focused', false);\n  } else if (action.type === actionTypes.GET_SEARCH_LIST) {\n    return state.set('list', action.list);\n  }\n\n  return state;\n});","map":{"version":3,"sources":["E:\\learn\\react\\jianshu\\src\\commen\\header\\headerStore\\headerReducer.js"],"names":["actionTypes","fromJS","defaultState","focused","list","state","action","type","BOX_FOCUS","set","BOX_BLUR","GET_SEARCH_LIST"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,SAA1B;AACA,SAAQC,MAAR,QAAqB,WAArB,C,CACA;;AACA,MAAMC,YAAY,GAAGD,MAAM,CAAC;AAC3BE,EAAAA,OAAO,EAAE,KADkB;AAE3BC,EAAAA,IAAI,EAAC;AAFsB,CAAD,CAA3B,C,CAKA;AACA;;AACA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAChD,MAAGA,MAAM,CAACC,IAAP,KAAgBP,WAAW,CAACQ,SAA/B,EAA0C;AACzC;AACA,WAAOH,KAAK,CAACI,GAAN,CAAU,SAAV,EAAqB,IAArB,CAAP;AACA,GAHD,MAGM,IAAGH,MAAM,CAACC,IAAP,KAAgBP,WAAW,CAACU,QAA/B,EAAyC;AAC9C,WAAOL,KAAK,CAACI,GAAN,CAAU,SAAV,EAAqB,KAArB,CAAP;AACA,GAFK,MAEA,IAAGH,MAAM,CAACC,IAAP,KAAgBP,WAAW,CAACW,eAA/B,EAA+C;AACpD,WAAON,KAAK,CAACI,GAAN,CAAU,MAAV,EAAkBH,MAAM,CAACF,IAAzB,CAAP;AACA;;AACD,SAAOC,KAAP;AACA,CAVD","sourcesContent":["import {actionTypes} from './index';\r\nimport {fromJS} from 'immutable';\r\n//fromJS 也会把list数组编程immutable对象，所以传进来的action里的数据也需要预先转换为immutable对象\r\nconst defaultState = fromJS({\r\n\tfocused: false,\r\n\tlist:[]\r\n});\r\n\r\n//导出一个纯函数,运用了immutable之后，返回的就为一个immutable对象，\r\n//也就是在别的文件里面引用state.header就为一个immutable对象\r\nexport default (state = defaultState, action) => {\r\n\tif(action.type === actionTypes.BOX_FOCUS) {\r\n\t\t//返回的为一个依据之前state以及set的数据新生成的一个immutable对象\r\n\t\treturn state.set('focused', true);\r\n\t}else if(action.type === actionTypes.BOX_BLUR) {\r\n\t\treturn state.set('focused', false);\r\n\t}else if(action.type === actionTypes.GET_SEARCH_LIST){\r\n\t\treturn state.set('list', action.list);\r\n\t}\r\n\treturn state;\r\n}"]},"metadata":{},"sourceType":"module"}