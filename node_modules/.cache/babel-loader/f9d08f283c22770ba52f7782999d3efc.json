{"ast":null,"code":"var _jsxFileName = \"E:\\\\learn\\\\react\\\\jianshu\\\\src\\\\pages\\\\login\\\\index.js\";\nimport React, { Component } from 'react';\nimport { LoginWrapper, LoginArea, HeaderText } from './style';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { createActions } from './LoginStore';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.userName = React.createRef();\n    this.password = React.createRef();\n  }\n\n  render() {\n    const _this$props = this.props,\n          loginStatus = _this$props.loginStatus,\n          handleLogin = _this$props.handleLogin; //如果没登录显示登录页面，登录了显示主页\n\n    if (!loginStatus) {\n      return React.createElement(LoginWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        className: \"backHome\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"logoImg\",\n        src: \"/images/login.png\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      })), React.createElement(LoginArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(HeaderText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"loginText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"\\u767B\\u5F55\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"\\xB7\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"\\u6CE8\\u518C\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"iconfont\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"\\uE663\"), React.createElement(\"input\", {\n        ref: this.userName,\n        placeholder: \"\\u624B\\u673A\\u53F7\\u6216\\u90AE\\u7BB1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"iconfont\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"\\uE640\"), React.createElement(\"input\", {\n        ref: this.password,\n        placeholder: \"\\u5BC6\\u7801\",\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: () => handleLogin(this.userName.current.value, this.password.current.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"\\u767B\\u5F55\")));\n    } else {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    loginStatus: state.get('login').get('login')\n  };\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    handleLogin(userName, password) {\n      dispatch(createActions.handleLoginAction(userName, password));\n    }\n\n  };\n};\n\nexport default connect(mapState, mapDispatch)(Login);","map":{"version":3,"sources":["E:\\learn\\react\\jianshu\\src\\pages\\login\\index.js"],"names":["React","Component","LoginWrapper","LoginArea","HeaderText","connect","Link","Redirect","createActions","Login","constructor","props","userName","createRef","password","render","loginStatus","handleLogin","current","value","mapState","state","get","mapDispatch","dispatch","handleLoginAction"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {LoginWrapper, LoginArea, HeaderText} from './style';\r\nimport {connect} from 'react-redux';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {createActions} from './LoginStore';\r\n\r\nclass Login extends Component{\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.userName = React.createRef();\r\n\t\tthis.password = React.createRef();\r\n\t}\r\n\trender() {\r\n\t\tconst {loginStatus,handleLogin} = this.props;\r\n\t\t//如果没登录显示登录页面，登录了显示主页\r\n\t\tif(!loginStatus){\r\n\t\t\treturn (\r\n\t\t\t\t<LoginWrapper>\r\n\t\t\t\t\t<Link to='/' className='backHome'><img className='logoImg' src='/images/login.png' alt='logo' />\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<LoginArea>\r\n\t\t\t\t\t\t<HeaderText><span className='loginText'>登录</span><span>·</span><span>注册</span></HeaderText>\r\n\t\t\t\t\t\t<div><span className='iconfont'>&#xe663;</span><input ref={this.userName} placeholder='手机号或邮箱' /></div>\r\n\t\t\t\t\t\t<div><span className='iconfont'>&#xe640;</span><input ref={this.password} placeholder='密码' type=\"password\"/></div>\r\n\t\t\t\t\t\t<button onClick={()=> handleLogin(this.userName.current.value, this.password.current.value)}>登录</button>\r\n\t\t\t\t\t</LoginArea>\r\n\t\t\t\t</LoginWrapper>\r\n\t\t\t)\r\n\t\t}else{\r\n\t\t\treturn <Redirect to='/' />;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n}\r\n\r\nconst mapState = (state) => {\r\n\treturn {\r\n\t\tloginStatus:state.get('login').get('login')\r\n\t}\r\n}\r\nconst mapDispatch = (dispatch) => {\r\n\treturn {\r\n\t\thandleLogin(userName, password) {\r\n\t\t\tdispatch(createActions.handleLoginAction(userName, password));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(Login);"]},"metadata":{},"sourceType":"module"}