{"ast":null,"code":"import { fromJS } from 'immutable';\nimport * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const initListAction = () => {\n  return dispatch => {\n    axios.get('./testData/list.json').then(res => {\n      const origindData = JSON.parse(JSON.stringify(res.data));\n      const len = origindData.length;\n      const data = [];\n\n      for (let i = 0; i < 6; i++) {\n        data.push(origindData[i]);\n      }\n\n      const action = {\n        type: actionTypes.INIT_LIST,\n        data: fromJS(data),\n        listLength: len\n      };\n      dispatch(action);\n    });\n  };\n};\nexport const showMoreListAction = (curPos, len) => {\n  return dispatch => {\n    axios.get('./testData/list.json').then(res => {\n      const origindData = JSON.parse(JSON.stringify(res.data));\n      const data = [];\n      let currentPosition = curPos;\n\n      if (curPos < len) {\n        if (curPos + 6 <= len) {\n          for (let i = 0; i < curPos + 6; i++) {\n            data.push(origindData[i]);\n          }\n\n          currentPosition = curPos + 6;\n        } else {\n          for (let i = 0; i < len; i++) {\n            data.push(origindData[i]);\n          }\n\n          currentPosition = len;\n        }\n\n        const action = {\n          type: actionTypes.SHOW_MORE_LIST,\n          data: fromJS(data),\n          currentPosition: currentPosition\n        };\n        dispatch(action);\n      } else {\n        const action = {\n          type: actionTypes.SHOW_MORE_LIST,\n          data: fromJS(origindData),\n          currentPosition: currentPosition\n        };\n        dispatch(action);\n      }\n    });\n  };\n};\nexport const initWriterListAction = () => {\n  return dispatch => {\n    axios.get('./testData/writerList.json').then(res => {\n      const origindData = JSON.parse(JSON.stringify(res.data));\n      const len = origindData.length;\n      const data = [];\n\n      for (let i = 0; i < 5; i++) {\n        data.push(origindData[i]);\n      }\n\n      const action = {\n        type: actionTypes.INIT_WRITER_LIST,\n        data: fromJS(data),\n        listLength: len\n      };\n      dispatch(action);\n    });\n  };\n};\nexport const changeWriterListAction = (curPos, len) => {\n  return dispatch => {\n    axios.get('./testData/writerList.json').then(res => {\n      const origindData = JSON.parse(JSON.stringify(res.data));\n      const data = [];\n      let currentPosition = curPos;\n\n      if (curPos < len) {\n        if (curPos + 5 <= len) {\n          for (let i = curPos; i < curPos + 5; i++) {\n            data.push(origindData[i]);\n          }\n\n          currentPosition = curPos + 6;\n        } else {\n          for (let i = curPos; i < len; i++) {\n            data.push(origindData[i]);\n          }\n\n          currentPosition = len;\n        }\n\n        const action = {\n          type: actionTypes.CHANGE_WRITER_LIST,\n          data: fromJS(data),\n          currentPosition: currentPosition\n        };\n        dispatch(action);\n      } else {\n        for (let i = 0; i < 5; i++) {\n          data.push(origindData[i]);\n        }\n\n        const action = {\n          type: actionTypes.CHANGE_WRITER_LIST,\n          data: fromJS(data),\n          currentPosition: 5\n        };\n        dispatch(action);\n      }\n    });\n  };\n};\nexport const handleFocusClickAction = () => {\n  const action = {\n    type: actionTypes.HANDLEFOCUS\n  };\n  dispatch(action);\n};","map":{"version":3,"sources":["E:\\learn\\react\\jianshu\\src\\pages\\home\\homeStore\\createActions.js"],"names":["fromJS","actionTypes","axios","initListAction","dispatch","get","then","res","origindData","JSON","parse","stringify","data","len","length","i","push","action","type","INIT_LIST","listLength","showMoreListAction","curPos","currentPosition","SHOW_MORE_LIST","initWriterListAction","INIT_WRITER_LIST","changeWriterListAction","CHANGE_WRITER_LIST","handleFocusClickAction","HANDLEFOCUS"],"mappings":"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","sourcesContent":["import {fromJS} from 'immutable';\r\nimport * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const initListAction = () =>{\r\n\treturn (dispatch)=>{\r\n\t\taxios.get('./testData/list.json').then((res)=>{\r\n\t\t\tconst origindData = JSON.parse(JSON.stringify(res.data));\r\n\t\t\tconst len = origindData.length;\r\n\t\t\tconst data = [];\r\n\t\t\tfor(let i = 0; i< 6; i++){\r\n\t\t\t\tdata.push(origindData[i]);\r\n\t\t\t}\r\n\t\t\tconst action = {\r\n\t\t\t\ttype: actionTypes.INIT_LIST,\r\n\t\t\t\tdata: fromJS(data),\r\n\t\t\t\tlistLength:len\r\n\t\t\t};\r\n\t\t\tdispatch(action);\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const showMoreListAction = (curPos, len) => {\r\n\treturn (dispatch) => {\r\n\t\taxios.get('./testData/list.json').then((res)=>{\r\n\t\t\tconst origindData = JSON.parse(JSON.stringify(res.data));\r\n\t\t\tconst data = [];\r\n\t\t\tlet currentPosition = curPos;\r\n\t\t\tif(curPos < len){\r\n\t\t\t\tif(curPos+6 <= len){\r\n\t\t\t\t\tfor(let i = 0; i < curPos+6; i++){\r\n\t\t\t\t\t\tdata.push(origindData[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcurrentPosition = curPos+6;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tfor(let i = 0; i < len; i++){\r\n\t\t\t\t\t\tdata.push(origindData[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcurrentPosition = len;\r\n\t\t\t\t}\r\n\t\t\t\tconst action ={\r\n\t\t\t\t\ttype:actionTypes.SHOW_MORE_LIST,\r\n\t\t\t\t\tdata: fromJS(data),\r\n\t\t\t\t\tcurrentPosition: currentPosition\r\n\t\t\t\t};\r\n\t\t\t\tdispatch(action);\r\n\t\t\t}else{\r\n\t\t\t\tconst action ={\r\n\t\t\t\t\ttype:actionTypes.SHOW_MORE_LIST,\r\n\t\t\t\t\tdata: fromJS(origindData),\r\n\t\t\t\t\tcurrentPosition: currentPosition\r\n\t\t\t\t};\r\n\t\t\t\tdispatch(action);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const initWriterListAction = () =>{\r\n\treturn (dispatch)=>{\r\n\t\taxios.get('./testData/writerList.json').then((res)=>{\r\n\t\t\tconst origindData = JSON.parse(JSON.stringify(res.data));\r\n\t\t\tconst len = origindData.length;\r\n\t\t\tconst data = [];\r\n\t\t\tfor(let i = 0; i< 5; i++){\r\n\t\t\t\tdata.push(origindData[i]);\r\n\t\t\t}\r\n\t\t\tconst action = {\r\n\t\t\t\ttype: actionTypes.INIT_WRITER_LIST,\r\n\t\t\t\tdata: fromJS(data),\r\n\t\t\t\tlistLength:len\r\n\t\t\t};\r\n\t\t\tdispatch(action);\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const changeWriterListAction = (curPos, len) => {\r\n\treturn (dispatch) => {\r\n\t\taxios.get('./testData/writerList.json').then((res)=>{\r\n\t\t\tconst origindData = JSON.parse(JSON.stringify(res.data));\r\n\t\t\tconst data = [];\r\n\t\t\tlet currentPosition = curPos;\r\n\t\t\tif(curPos < len){\r\n\t\t\t\tif(curPos+5 <= len){\r\n\t\t\t\t\tfor(let i = curPos; i < curPos+5; i++){\r\n\t\t\t\t\t\tdata.push(origindData[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcurrentPosition = curPos+6;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tfor(let i = curPos; i < len; i++){\r\n\t\t\t\t\t\tdata.push(origindData[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcurrentPosition = len;\r\n\t\t\t\t}\r\n\t\t\t\tconst action ={\r\n\t\t\t\t\ttype:actionTypes.CHANGE_WRITER_LIST,\r\n\t\t\t\t\tdata: fromJS(data),\r\n\t\t\t\t\tcurrentPosition: currentPosition\r\n\t\t\t\t};\r\n\t\t\t\tdispatch(action);\r\n\t\t\t}else{\r\n\t\t\t\tfor(let i = 0; i < 5; i++){\r\n\t\t\t\t\t\tdata.push(origindData[i]);\r\n\t\t\t\t}\r\n\t\t\t\tconst action ={\r\n\t\t\t\t\ttype:actionTypes.CHANGE_WRITER_LIST,\r\n\t\t\t\t\tdata: fromJS(data),\r\n\t\t\t\t\tcurrentPosition: 5\r\n\t\t\t\t};\r\n\t\t\t\tdispatch(action);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t})\r\n\t}\r\n};\r\n\r\nexport const handleFocusClickAction = () => {\r\n\tconst action = {\r\n\t\ttype: actionTypes.HANDLEFOCUS\r\n\t};\r\n\tdispatch(action);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}